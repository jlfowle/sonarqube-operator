name: Main
on:
  push:
    branches:
      - master
  pull_request:
    branches: [ master ]
jobs:
  test:
    name: Test/Analyze
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.13
        id: go
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Cache go modules
        uses: actions/cache@v1
        env:
          cache-name: cache-go-modules
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - name: Get dependencies
        run: go get -v -t -d ./...
      - name: Test
        run: go test -v ./pkg/... -json -coverprofile=cov.out > report.json
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  changes:
    if: github.event == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - id: file_changes
        uses: trilom/file-changes-action@v1.2.3
      - name: test
        run: |
          cat $HOME/files.json
          cat $HOME/files_modified.json
          cat $HOME/files_added.json
          cat $HOME/files_removed.json
          echo '${{ steps.file_changes.outputs.files }}'
          echo '${{ steps.file_changes.outputs.files_modified }}'
          echo '${{ steps.file_changes.outputs.files_added }}'
          echo '${{ steps.file_changes.outputs.files_removed }}'
  build:
    name: Build
    outputs:
      image: ${{ steps.build.outputs.image }}
    runs-on: ubuntu-latest
    steps:
      - name: Set up Operator-sdk
        uses: shivanshs9/setup-k8s-operator-sdk@v1
        with:
          version: ^0.18.2
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: Cache go modules
        uses: actions/cache@v1
        env:
          cache-name: cache-go-modules
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Get version
        run: echo ::set-output name=version::$(grep Version version/version.go | awk -F'"' '{print $2}')
        id: version
      - name: Build
        id: build
        run: |
          operator-sdk build quay.io/jlfowle/sonarqube-operator:${{ steps.version.outputs.version }}-${{ github.run_id }}
          docker login quay.io -u ${{ secrets.QUAY_USERNAME }} -p ${{ secrets.QUAY_TOKEN }}
          docker push quay.io/jlfowle/sonarqube-operator:${{ steps.version.outputs.version }}-${{ github.run_id }}
          echo ::set-output name=image::quay.io/jlfowle/sonarqube-operator:${{ steps.version.outputs.version }}-${{ github.run_id }}
  e2e:
    name: e2e Test
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Set up Operator-sdk
        uses: shivanshs9/setup-k8s-operator-sdk@v1
        with:
          version: ^0.18.2
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: Cache go modules
        uses: actions/cache@v1
        env:
          cache-name: cache-go-modules
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-e2ee-${{ env.cache-name }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-e2e-${{ env.cache-name }}-
            ${{ runner.os }}-e2e-
            ${{ runner.os }}-
      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v1.1.0
        with:
          minikube version: 'v1.12.1'
          kubernetes version: 'v1.18.3'
          github token: ${{ secrets.GITHUB_TOKEN }}
          driver: docker
      - name: Info
        run: |
          minikube status
          kubectl get storageclass -o yaml
          mkdir /tmp/pv
          chmod 777 /tmp/pv
          echo -e "apiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: task-pv-volume\n  labels:\n    type: local\nspec:\n  capacity:\n    storage: 10Gi\n  accessModes:\n    - ReadWriteOnce\n  local:\n    path: \"/tmp/pv\"" | kubectl apply -f -
      - name: Test
        run: operator-sdk test local ./test/e2e --image ${{ needs.build.outputs.image }} --go-test-flags "-v"